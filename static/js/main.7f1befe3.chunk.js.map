{"version":3,"sources":["assets/images/canvas.jpg","assets/images/blogging.png","assets/images/nft.jpg","views/Home.tsx","views/Explore.tsx","views/Creators.tsx","views/Community.tsx","assets/images/publish-nft.svg","assets/images/upload-blog.svg","assets/images/create-blog.svg","assets/images/create-canvas.svg","assets/images/read-blog.svg","views/Dashboard.tsx","constants/editor-constants.ts","views/BlogEditor.tsx","views/NotFound.tsx","views/BlogView.tsx","context/auth-modal-context.tsx","context/key-modal-context.tsx","context/metaroot-modal-context.tsx","context/user-auth-context.tsx","context/session-key-context.tsx","components/UserKeyModal.tsx","components/KeyAuthModal.tsx","components/layout/Navbar.tsx","components/MetarootModal.tsx","components/UserInfoSectionRect.tsx","components/UserProfileSection.tsx","components/SidebarButton.tsx","assets/images/undraw-female-avatar.svg","assets/images/nft-symbol.svg","components/layout/Sidebar.tsx","components/UserCollection.tsx","App.tsx","index.tsx"],"names":["Home","className","src","CanvasPic","alt","BloggingPic","NFTPic","size","Explore","Creators","Community","Dashboard","to","CreateBlog","UploadBlog","CreateCanvas","PublishNFT","ReadBlog","EDITOR_JS_TOOLS","embed","Embed","table","Table","marker","Marker","list","List","warning","Warning","code","Code","linkTool","LinkTool","image","Image","raw","Raw","header","Header","quote","Quote","checklist","CheckList","delimiter","Delimiter","inlineCode","InlineCode","simpleImage","SimpleImage","TEXT_EDITOR_CONTENT","ReactEditorJS","createReactEditorJS","BlogEditor","editorCore","React","useRef","handleInitialize","useCallback","instance","current","handleSave","a","save","savedData","localStorage","setItem","JSON","stringify","console","log","data","getItem","onInitialize","instanceRef","tools","i18n","messages","time","blocks","type","text","level","onClick","NotFound","parse","BlogView","defaultState","authOverlayActive","setAuthOverlayActive","AuthModalContext","createContext","AuthModalProvider","children","useState","Provider","value","useAuthModalContext","useContext","keyOverlayActive","setKeyOverlayActive","walletOverlayActive","KeyModalContext","KeyModalProvider","useKeyModalContext","metarootOverlayActive","setMetarootOverlayActive","MetarootModalContext","MetarootModalProvider","useMetarootModalContext","isUserAuthenticated","setIsUserAuthenticated","UserAuthContext","UserAuthProvider","useUserAuthContext","defaultSessionState","sessionKey","setSessionKey","SessionKeyContext","SessionKeyProvider","useSessionKeyContext","UserKeyModal","parsedSessionKey","fromLandingPage","generatedKeys","toExecute","userMnemonic","userPrivateKey","userPublicKey","window","location","reload","KeyAuthModal","setUserMnemonic","setUserPublicKey","setUserPrivateKey","isKeyValidated","setIsKeyValidated","keyModalVisible","setKeyModalVisible","firstUpdate","useLayoutEffect","seed","seedFromWords","privateKeyFromSeed","byteArray","undefined","getPublicKey","Array","from","byte","toString","slice","join","userInput","useEffect","mnemonic","removeItem","ref","defaultValue","onChange","e","key","target","split","length","toLowerCase","match","isKey","validateWords","generateSeedWords","disabled","privKey","pubKey","Navbar","MetarootModal","UserInfoSectionRect","InfoTitle","InfoValue","InfoImage","InfoUnit","InfoImageClass","UserProfileSection","userProfileImage","userWalletAddress","SidebarButton","ButtonIcon","ButtonText","ButtonFunction","Sidebar","FemaleAvatar","NFTSymbol","UserCollection","justify","xxl","xl","md","sm","xs","gutter","Name","map","lg","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f1befe3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/canvas.94d95a35.jpg\";","export default __webpack_public_path__ + \"static/media/blogging.97d26d94.png\";","export default __webpack_public_path__ + \"static/media/nft.74f2c6cd.jpg\";","import React from \"react\";\nimport { CgProfile } from 'react-icons/cg';\n\nimport CanvasPic from '../assets/images/canvas.jpg';\nimport BloggingPic from '../assets/images/blogging.png';\nimport NFTPic from '../assets/images/nft.jpg';\n\nexport const Home = () => {\n    return (\n        <div className=\"home\">\n            <div className=\"main-content\">\n            <div className=\"subtitle\">\n                Create your community, voice collective and share wealth, <p> The first exchange was only benefitting few , lets reclaim the space of our attention and re-distribute what is ours (all of us) </p>\n            </div>\n            <div className=\"title-line\">\n                Create communities,<br />\n                Share values,<br />\n                Support your favorite creators, <br/>\n            </div>\n            <div className=\"home-images\">\n                <img className=\"home-images__item\" src={CanvasPic} alt=\"collaborate on canvas\" />\n                <img className=\"home-images__item\" src={BloggingPic} alt=\"write and publish blogs\" />\n                <img className=\"home-images__item\" src={NFTPic} alt=\"trade NFTs\" />\n            </div>\n            <div className=\"profile-container\">\n                <CgProfile size={42} />\n            </div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport const Explore = () => {\n    return (\n        <div>\n            Explore\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const Creators = () => {\n    return (\n        <div>\n            Creators\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const Community = () => {\n    return (\n        <div>\n            Community\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/publish-nft.3477f253.svg\";","export default __webpack_public_path__ + \"static/media/upload-blog.b3dfc465.svg\";","export default __webpack_public_path__ + \"static/media/create-blog.8c7f4317.svg\";","export default __webpack_public_path__ + \"static/media/create-canvas.0b227bde.svg\";","export default __webpack_public_path__ + \"static/media/read-blog.5aafd511.svg\";","import React, { FC } from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport PublishNFT from \"../assets/images/publish-nft.svg\";\nimport UploadBlog from \"../assets/images/upload-blog.svg\";\nimport CreateBlog from \"../assets/images/create-blog.svg\";\nimport CreateCanvas from \"../assets/images/create-canvas.svg\";\nimport ReadBlog from '../assets/images/read-blog.svg';\n\nexport const Dashboard: FC = () => {\n    // When on custom domain change Link's \"to\" value to '/WriteBlog'\n    return (\n        <div className=\"dashboard-container\">\n            <div className=\"dashboard__col-1\">\n                <div className=\"dashboard__col-1-row-1\"></div>\n                <div className=\"dashboard__col-1-row-2\"></div>\n            </div>\n            <div className=\"dashboard__col-2\">\n                <div className=\"create-section\">\n                    <span className=\"dashboard-heading\">Create</span>\n                    <div className=\"create-options\">\n                        <Link to='/second.exchange/write' className=\"create-options__item\">\n                            <span>\n                                <img src={CreateBlog} alt=\"create-blog\" />\n                            </span>\n                            <span className=\"create-options__item-text\">\n                                Write Blog\n                            </span>\n                        </Link>\n                        <div className=\"create-options__item\">\n                            <span>\n                                <img src={UploadBlog} alt=\"upload-blog\" />\n                            </span>\n                            <span className=\"create-options__item-text\">\n                                Upload Blog\n                            </span>\n                        </div>\n                        <div className=\"create-options__item\">\n                            <span>\n                                <img src={CreateCanvas} alt=\"create-canvas\" />\n                            </span>\n                            <span className=\"create-options__item-text\">\n                                Build Canvas\n                            </span>\n                        </div>\n                        <div className=\"create-options__item\">\n                            <span>\n                                <img src={PublishNFT} alt=\"publish-nft\" />\n                            </span>\n                            <span className=\"create-options__item-text\">\n                                Publish NFT\n                            </span>\n                        </div>\n                        <Link to='/second.exchange/read' className=\"create-options__item\">\n                            <div className=\"create-options__item\">\n                                <span>\n                                    <img src={ReadBlog} alt=\"read-blog\" />\n                                </span>\n                                <span className=\"create-options__item-text\">\n                                    Read blog\n                                </span>\n                            </div>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import Embed from '@editorjs/embed';\nimport Table from \"@editorjs/table\";\nimport List from \"@editorjs/list\";\nimport Warning from \"@editorjs/warning\";\nimport Code from \"@editorjs/code\";\nimport LinkTool from \"@editorjs/link\";\nimport Image from \"@editorjs/image\";\nimport Raw from \"@editorjs/raw\";\nimport Header from \"@editorjs/header\";\nimport Quote from \"@editorjs/quote\";\nimport Marker from \"@editorjs/marker\";\nimport CheckList from \"@editorjs/checklist\";\nimport Delimiter from \"@editorjs/delimiter\";\nimport InlineCode from \"@editorjs/inline-code\";\nimport SimpleImage from \"@editorjs/simple-image\";\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  marker: Marker,\n  list: List,\n  warning: Warning,\n  code: Code,\n  linkTool: LinkTool,\n  image: Image,\n  raw: Raw,\n  header: Header,\n  quote: Quote,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage\n};\n","import React from \"react\";\n\nimport { EDITOR_JS_TOOLS } from \"../constants/editor-constants\";\nimport { createReactEditorJS } from \"react-editor-js\";\n\nconst TEXT_EDITOR_CONTENT = \"saved-text-local\";\n\nconst ReactEditorJS = createReactEditorJS();\n\nexport const BlogEditor = () => {\n    const editorCore = React.useRef(null);\n    // @ts-ignore\n\n    const handleInitialize = React.useCallback((instance) => {\n        editorCore.current = instance\n      }, [])\n\n      const handleSave = React.useCallback(async () => {\n        //@ts-ignore\n        const savedData = await editorCore.current.save();\n        //@ts-ignore\n        localStorage.setItem(TEXT_EDITOR_CONTENT, JSON.stringify(savedData));\n        console.log(savedData);\n        const data = localStorage.getItem(TEXT_EDITOR_CONTENT);\n        console.log(\"from localstorage: \", data);\n      }, [])\n\n    return (\n        <div className=\"blog-editor-container\">\n            {/* @ts-ignore */}\n            <ReactEditorJS onInitialize={handleInitialize} instanceRef={(instance) => (instanceRef.current = instance)}\n                tools={EDITOR_JS_TOOLS}\n                i18n={{\n                    messages: {},\n                }}\n                data={{\n                    time: 1556098174501,\n                    blocks: [\n                        {\n                            type: \"header\",\n                            data: {\n                            text: \"Editor.js\",\n                            level: 2\n                        }\n                      }\n                    ]\n                }}\n            />\n\n            <button \n                className=\"blog-ops-button\"\n                onClick={handleSave}\n            >\n                Save!\n            </button>\n        </div>\n    );\n};\n","import React from 'react';\n\nexport const NotFound = () => {\n    return(\n        <div className='not-found-container'>\n            Seems like the page doesn't exist or you are not logged in\n        </div>\n    )\n}\n","import React from \"react\";\n// @ts-ignore\nimport Output from \"editorjs-react-renderer\";\n\nconst TEXT_EDITOR_CONTENT = \"saved-text-local\";\n// @ts-ignore\nconst data = JSON.parse(localStorage.getItem(TEXT_EDITOR_CONTENT));\n\nexport const BlogView = () => {\n    console.log(data);\n    return (\n        <div className=\"blog-container\">\n            <Output data={data} />\n        </div>\n    );\n};\n","import React, { useState, createContext, useContext, FC } from 'react';\n\nconst defaultState = {\n    authOverlayActive: false,\n    setAuthOverlayActive: (authOverlayActive: boolean) => {}\n}\n\nconst AuthModalContext = createContext(defaultState);\n\nexport const AuthModalProvider: FC = ({ children }) => {\n    const [authOverlayActive, setAuthOverlayActive] = useState(defaultState.authOverlayActive);\n\n    return(\n        <AuthModalContext.Provider value={{ authOverlayActive, setAuthOverlayActive }}>\n            {children}\n        </AuthModalContext.Provider>\n    );\n};\n\nexport const useAuthModalContext = () => useContext(AuthModalContext);\n","import React, { useState, createContext, useContext, FC } from 'react';\n\nconst defaultState = {\n    keyOverlayActive: false,\n    setKeyOverlayActive: (walletOverlayActive: boolean) => {}\n}\n\nconst KeyModalContext = createContext(defaultState);\n\nexport const KeyModalProvider: FC = ({ children }) => {\n    const [keyOverlayActive, setKeyOverlayActive] = useState(defaultState.keyOverlayActive);\n\n    return(\n        <KeyModalContext.Provider value={{ keyOverlayActive, setKeyOverlayActive }}>\n            {children}\n        </KeyModalContext.Provider>\n    );\n};\n\nexport const useKeyModalContext = () => useContext(KeyModalContext);\n","import React, { useState, createContext, useContext, FC } from 'react';\n\nconst defaultState = {\n    metarootOverlayActive: false,\n    setMetarootOverlayActive: (metarootOverlayActive: boolean) => {}\n}\n\nconst MetarootModalContext = createContext(defaultState);\n\nexport const MetarootModalProvider: FC = ({ children }) => {\n    const [metarootOverlayActive, setMetarootOverlayActive] = useState(defaultState.metarootOverlayActive);\n\n    return(\n        <MetarootModalContext.Provider value={{ metarootOverlayActive, setMetarootOverlayActive }}>\n            {children}\n        </MetarootModalContext.Provider>\n    );\n};\n\nexport const useMetarootModalContext = () => useContext(MetarootModalContext);\n","import React, { useState, createContext, useContext, FC } from 'react';\n\nconst defaultState = {\n    isUserAuthenticated: localStorage.getItem('user-auth') ? true : false,\n    setIsUserAuthenticated: (isUserAuthenticated: boolean) => {}\n}\n\nconst UserAuthContext = createContext(defaultState);\n\nexport const UserAuthProvider: FC = ({ children }) => {\n    const [isUserAuthenticated, setIsUserAuthenticated] = useState(defaultState.isUserAuthenticated);\n\n    return(\n        <UserAuthContext.Provider value={{ isUserAuthenticated, setIsUserAuthenticated }}>\n            {children}\n        </UserAuthContext.Provider>\n    );\n};\n\nexport const useUserAuthContext = () => useContext(UserAuthContext);\n","import React, { useState, createContext, useContext, FC } from \"react\";\n\nconst defaultSessionState = {\n    sessionKey: localStorage.getItem(\"user-auth\")\n        ? localStorage.getItem(\"user-auth\")\n        : null,\n    setSessionKey: (sessionKey: any) => {},\n};\n\nconst SessionKeyContext = createContext(defaultSessionState);\n\nexport const SessionKeyProvider: FC = ({ children }) => {\n    const [sessionKey, setSessionKey] = useState(\n        defaultSessionState.sessionKey\n    );\n\n    return (\n        <SessionKeyContext.Provider value={{ sessionKey, setSessionKey }}>\n            {children}\n        </SessionKeyContext.Provider>\n    );\n};\n\nexport const useSessionKeyContext = () => useContext(SessionKeyContext);\n","import React, { FC } from \"react\";\nimport { IoCloseOutline } from \"react-icons/io5\";\n\nimport { useSessionKeyContext } from \"../context\";\nimport { useKeyModalContext } from \"../context\";\n\ninterface IProps {\n    fromLandingPage?: boolean,\n    generatedKeys?: any,\n    toExecute?: any,\n}\n\nexport const UserKeyModal: FC<IProps> = ({ fromLandingPage, generatedKeys, toExecute }) => {\n    const { sessionKey } = useSessionKeyContext();\n\n    var parsedSessionKey;\n    // @ts-ignore\n    fromLandingPage ? parsedSessionKey = generatedKeys : parsedSessionKey = JSON.parse(sessionKey);\n    // @ts-ignore\n    const userMnemonic = parsedSessionKey[\"mnemonic\"];\n    // @ts-ignore\n    const userPrivateKey = parsedSessionKey[\"privKey\"];\n    // @ts-ignore\n    const userPublicKey = parsedSessionKey[\"pubKey\"];\n\n    const { setKeyOverlayActive } = useKeyModalContext();\n\n    const refreshPage = () => {\n        window.location.reload();\n    };\n\n    return (\n        <div className=\"wallet-modal__top-level\">\n            <div className=\"wallet-modal__container\">\n                { !fromLandingPage && <button\n                    className=\"wallet-modal__close-button\"\n                    onClick={() => setKeyOverlayActive(false)}\n                >\n                    <IoCloseOutline size={25} />\n                </button>}\n                <div className=\"wallet-modal__header\">\n                    <div className=\"wallet-modal__title\">Your Keys</div>\n                    <hr />\n                </div>\n                <div className=\"key-modal__body\">\n                    <div className=\"key-modal__subtitle\">\n                        Make sure you back up your private key!\n                    </div>\n                    <div className=\"key-modal__info\">\n                        Posts are published using your private key. Others can\n                        see your posts or follow you using only your public key.\n                    </div>\n                    <div className=\"key-setup__generated-key\">\n                        <span className=\"key-setup__generated-key-value\">\n                            <span className=\"key-setup__generated-key-tag\">\n                                Seed Words\n                            </span>{\" \"}\n                            <br />\n                            {/* Need to add these in a copy text block */}\n                            {userMnemonic} <br />\n                            <span className=\"key-setup__generated-key-tag\">\n                                Private key\n                            </span>{\" \"}\n                            <br />\n                            {userPrivateKey} <br />\n                            <span className=\"key-setup__generated-key-tag\">\n                                Public key\n                            </span>{\" \"}\n                            <br />\n                            {userPublicKey}\n                        </span>\n                    </div>\n                </div>\n                <hr />\n                { fromLandingPage && <button \n                    className=\"key-modal__proceed-button\"\n                    onClick={() => {\n                        toExecute(true);\n                        refreshPage();\n                    }}\n                >\n                    Proceed\n                </button> }\n            </div>\n        </div>\n    );\n};\n","import React, { useState, useRef, useLayoutEffect, useEffect } from \"react\";\nimport { IoCloseOutline } from \"react-icons/io5\";\nimport {\n    generateSeedWords,\n    validateWords,\n    seedFromWords,\n    privateKeyFromSeed,\n} from \"nostr-tools/nip06\";\nimport { getPublicKey } from \"nostr-tools\";\n\nimport { useSessionKeyContext, useUserAuthContext } from \"../context\";\nimport { useAuthModalContext } from \"../context\";\nimport { UserKeyModal } from \"./UserKeyModal\";\n\nconst isKey = (key: any) => {\n    return key?.toLowerCase()?.match(/^[0-9a-f]{64}$/);\n};\n\nconst isKeyValid = (key: any) => {\n    if (isKey(key)) return true;\n    if (validateWords(key.toLowerCase())) return true;\n    return false;\n};\n\nconst refreshPage = () => {\n    window.location.reload();\n};\n\nconst clearLocalStorage = () => {\n    localStorage.removeItem(\"user-auth\");\n};\n\nexport const KeyAuthModal = () => {\n    const [userMnemonic, setUserMnemonic] = useState<string>();\n    const [userPublicKey, setUserPublicKey] = useState<string>();\n    const [userPrivateKey, setUserPrivateKey] = useState<string>();\n    const [isKeyValidated, setIsKeyValidated] = useState(false);\n    const [keyModalVisible, setKeyModalVisible] = useState(false);\n\n    const { sessionKey, setSessionKey } = useSessionKeyContext();\n    const { setAuthOverlayActive } = useAuthModalContext();\n    const { isUserAuthenticated, setIsUserAuthenticated } = useUserAuthContext();\n\n    function toHexString(byteArray: Uint8Array) {\n        return Array.from(byteArray, function (byte) {\n            return (\"0\" + (byte & 0xff).toString(16)).slice(-2);\n        }).join(\"\");\n    }\n\n    const firstUpdate = useRef(true);\n    useLayoutEffect(() => {\n        if(firstUpdate.current) {\n            firstUpdate.current = false;\n            return;\n        }\n\n        var seed;\n        if(userMnemonic !== null)\n        {\n            seed = seedFromWords(userMnemonic);\n            setUserPrivateKey(privateKeyFromSeed(seed));\n        }\n    }, [userMnemonic, userPrivateKey]);\n\n    useLayoutEffect(() => {\n        if(firstUpdate.current) {\n            firstUpdate.current = false;\n            return;\n       }\n\n        if(userPrivateKey !== undefined)\n            setUserPublicKey(toHexString(getPublicKey(userPrivateKey)));\n    }, [userPrivateKey]);\n\n    useLayoutEffect(() => {\n        if(firstUpdate.current) {\n            firstUpdate.current = false;\n            return;\n        }\n\n        if(isUserAuthenticated)\n        {\n            localStorage.setItem(\"user-auth\", JSON.stringify(sessionKey));\n        }\n    }, [isUserAuthenticated, sessionKey]);\n\n    const userInput = useRef<HTMLInputElement>();\n    // @ts-ignore\n    const clearInput = () => (userInput.current.value = \"\");\n    // @ts-ignore\n    const dispalyMnemonic = (mnemonic: string | \"\") => (userInput.current.value = mnemonic)\n\n    useEffect(() => {\n        if(!isUserAuthenticated)\n        {\n            dispalyMnemonic(userMnemonic ? userMnemonic : \"\");\n        }\n    }, [isUserAuthenticated, userMnemonic])\n\n    return (\n        <div className=\"wallet-modal__top-level\">\n            { !keyModalVisible && <div className=\"wallet-modal__container\">\n                <button\n                    className=\"wallet-modal__close-button\"\n                    onClick={() => setAuthOverlayActive(false)}\n                >\n                    <IoCloseOutline size={25} />\n                </button>\n                <div className=\"wallet-modal__header\">\n                    <div className=\"wallet-modal__title\">\n                        {!isUserAuthenticated\n                            ? \"Getting Started\"\n                            : \"Logout and Clear\"}\n                    </div>\n                </div>\n                <hr />\n                {!isUserAuthenticated ? (\n                    <div className=\"key-setup\">\n                        <div className=\"key-setup__title\">Key Setup</div>\n                        Enter your nostr key or generate new\n                        <div className=\"key-setup__input\">\n                            {/* @ts-ignore */}\n                            <input ref={userInput}\n                                defaultValue={userMnemonic || \"\"}\n                                className=\"key-setup__input-box\"\n                                type=\"text\"\n                                onChange={(e) => {\n                                    if(e.target.value.split(' ').length === 12) {\n                                        if (isKeyValid(e.target.value)) {\n                                            setUserMnemonic(e.target.value);\n                                            setIsKeyValidated(true);\n                                        }\n                                    }\n                                    else {\n                                        setIsKeyValidated(false);\n                                    }\n                                }}\n                            />\n                        </div>\n                        <button\n                            className=\"key-setup__generate-button\"\n                            onClick={() => {\n                                setUserMnemonic(generateSeedWords());\n                                setIsKeyValidated(true);\n                            }}\n                        >\n                            Generate\n                        </button>\n                        <button\n                            className=\"key-setup__proceed\"\n                            disabled={!isKeyValidated}\n                            onClick={() => {\n                                setSessionKey({\n                                    mnemonic: userMnemonic,\n                                    privKey: userPrivateKey,\n                                    pubKey: userPublicKey,\n                                });\n                                setKeyModalVisible(true);\n                            }}\n                        >\n                            Proceed\n                        </button>\n                        <button\n                            className=\"key-setup__proceed\"\n                            onClick={() => {\n                                clearInput();\n                            }}\n                        >\n                            Reset\n                        </button>\n                    </div>\n                ) : (\n                    <div className=\"delete-local-storage\">\n                        <div className=\"delete-local-storage__title\">\n                            Delete Local Storage\n                        </div>\n                        <div>Doing this will log you out</div>\n                        <button\n                            className=\"delete-local-storage__button\"\n                            onClick={() => {\n                                clearLocalStorage();\n                                refreshPage();\n                            }}\n                        >\n                            Delete\n                        </button>\n                    </div>\n                )}\n                <hr />\n            </div>}\n            { keyModalVisible && <UserKeyModal fromLandingPage={true} generatedKeys={sessionKey} toExecute={setIsUserAuthenticated} /> }\n        </div>\n    );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from \"react\";\nimport { Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport { KeyAuthModal } from \"../KeyAuthModal\";\nimport { useAuthModalContext } from \"../../context\";\nimport { useUserAuthContext } from \"../../context\";\n\nexport const Navbar = () => {\n  const { authOverlayActive, setAuthOverlayActive } = useAuthModalContext();\n  const { isUserAuthenticated } = useUserAuthContext();\n\n  useEffect(() => {\n    setAuthOverlayActive(false);\n  }, [isUserAuthenticated]);\n\n  // When on custom domain change Link's \"to\" value to '/route'\n  return (\n    <div className=\"navbar-container\">\n      <nav>\n        <Link\n          className={\n            isUserAuthenticated ? \"nav-logo selected-nav-option\" : \"nav-logo\"\n          }\n          to=\"/second.exchange/\"\n        >\n          second.exchange\n        </Link>\n        <div className=\"nav-options\">\n          <Link className=\"nav-item\" to=\"/second.exchange/explore\">\n            Explore\n          </Link>\n          <Link className=\"nav-item\" to=\"/second.exchange/creators\">\n            Creators\n          </Link>\n          <Link className=\"nav-item\" to=\"/second.exchange/community\">\n            Community\n          </Link>\n        </div>\n        <Button\n          className={\n            isUserAuthenticated\n              ? \"wallet-connected-button\"\n              : \"wallet-connect-button\"\n          }\n          onClick={() => setAuthOverlayActive(!authOverlayActive)}\n        >\n          {!isUserAuthenticated && \"Connect\"}\n          {isUserAuthenticated ? (\n            <div className=\"wallet-connected-text\">Connected</div>\n          ) : (\n            \"\"\n          )}\n        </Button>\n      </nav>\n      {authOverlayActive && <KeyAuthModal />}\n    </div>\n  );\n};\n","import React from 'react';\nimport { IoCloseOutline } from \"react-icons/io5\";\n\nimport { useMetarootModalContext } from \"../context\";\n\nexport const MetarootModal = () => {\n    const { metarootOverlayActive, setMetarootOverlayActive } =\n    useMetarootModalContext();\n    return(\n        <div className='metaroot-modal__top-level'>\n            <div className='metaroot-modal__container'>\n                <button\n                    className=\"metaroot-modal__close-button\"\n                    onClick={() => setMetarootOverlayActive(!metarootOverlayActive)}\n                >\n                    <IoCloseOutline size={25} />\n                </button>\n                <div className=\"wallet-modal__header\">\n                    <div className=\"wallet-modal__title\">Claim identity with metaroot</div>\n                </div>\n                <hr />\n                <div className=\"wallet-modal__buttons-container\">Claiming name through metaroot/ANS coming soon</div>\n            </div>\n        </div>\n    )\n}\n","import React, { FC } from 'react';\n\ninterface IProps {\n    InfoTitle: string,\n    InfoValue: number,\n    InfoImage: any,\n    InfoUnit: string,\n    InfoImageClass: string | null,\n}\n\nexport const UserInfoSectionRect: FC<IProps> = ({ InfoTitle, InfoValue, InfoImage, InfoUnit, InfoImageClass=''}) => {\n    return (\n        <div className=\"sidebar-section\">\n            <div className=\"sidebar-section__title\">{InfoTitle}</div>\n            <div className=\"sidebar-section__value\">\n                {InfoValue}\n            </div>\n            <div className=\"sidebar-section__unit\">\n                <img className={InfoImageClass + \"avax-logo\"} src={InfoImage} alt=\"avax\" />\n                <span>{InfoUnit}</span>\n            </div>\n        </div>\n    );\n}\n","import React, { FC } from 'react';\nimport { useMetarootModalContext } from \"../context\";\n\nimport { BsPlusLg } from \"react-icons/bs\";\n\ninterface IProps {\n    userProfileImage: any,\n    userWalletAddress: string\n}\n\nexport const UserProfileSection: FC<IProps> = ({ userProfileImage, userWalletAddress }) => {\n    const { metarootOverlayActive, setMetarootOverlayActive } =\n        useMetarootModalContext();\n\n    return(\n        <div className=\"user-details\">\n            <span>\n                <img\n                    className=\"user-profile-pic-sidebar\"\n                    src={userProfileImage}\n                    alt=\"female avatar\"\n                />\n            </span>\n            <div className=\"user-details__name-details\">\n                <div className=\"user-details__name\">Second Exchanger</div>\n                <div className=\"user-details__details\">\n                    {userWalletAddress}\n                </div>\n            </div>\n            <div\n                className=\"user-details__plus\"\n                onClick={() =>\n                    setMetarootOverlayActive(!metarootOverlayActive)\n                }\n            >\n                <BsPlusLg size={24} />\n            </div>\n        </div>\n    );\n}\n","import React, { FC } from 'react';\n\ninterface IProps {\n    ButtonIcon: any,\n    ButtonText: string,\n    ButtonFunction?: () => any\n}\n\nexport const SidebarButton: FC<IProps> = ({ ButtonIcon, ButtonText, ButtonFunction }) => {\n    return(\n        <div \n            className=\"sidebar-buttons__item\"\n            onClick={() => {\n                if(ButtonFunction) \n                    ButtonFunction();\n            }}\n        >\n            {ButtonIcon}\n            <span className=\"sidebar-buttons__text\">{ButtonText}</span>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/undraw-female-avatar.cb71b8c2.svg\";","export default __webpack_public_path__ + \"static/media/nft-symbol.a5f19ebc.svg\";","import React from \"react\";\n\nimport { IoMdMoon } from \"react-icons/io\";\nimport { VscBellDot } from \"react-icons/vsc\";\nimport { IoMdSettings } from \"react-icons/io\";\n\nimport { MetarootModal } from \"../MetarootModal\";\nimport { UserInfoSectionRect } from \"../UserInfoSectionRect\";\nimport { UserProfileSection } from \"../UserProfileSection\";\nimport { SidebarButton } from \"../SidebarButton\";\nimport { UserKeyModal } from '../UserKeyModal';\nimport { useMetarootModalContext } from \"../../context\";\nimport { useKeyModalContext } from \"../../context\";\n\n\nimport FemaleAvatar from \"../../assets/images/undraw-female-avatar.svg\";\nimport NFTSymbol from \"../../assets/images/nft-symbol.svg\";\n\nexport const Sidebar = () => {\n    const { metarootOverlayActive } = useMetarootModalContext();\n    const { setKeyOverlayActive, keyOverlayActive } = useKeyModalContext();\n    const userNFTs = 55;\n\n    const handleYourKeys = () => {\n        setKeyOverlayActive(!keyOverlayActive);\n    }\n\n    return (\n        <div className=\"sidebar-container\">\n            <UserProfileSection\n                userProfileImage={FemaleAvatar}\n                userWalletAddress=\"123456\"\n            />\n            <UserInfoSectionRect\n                InfoTitle={\"Your Items\"}\n                InfoValue={userNFTs}\n                InfoImage={NFTSymbol}\n                InfoUnit={\"NFTs\"}\n                InfoImageClass={\"NFT-logo\"}\n            />\n            <div className=\"sidebar-buttons\">\n                <SidebarButton \n                    ButtonIcon={<IoMdMoon size={30}/>}\n                    ButtonText={\"DarkMode\"}\n                />\n                <SidebarButton \n                    ButtonIcon={<VscBellDot size={30}/>}\n                    ButtonText={\"Alerts\"}\n                />\n                <SidebarButton \n                    ButtonIcon={<IoMdSettings size={30}/>}\n                    ButtonText={\"Your Keys\"}\n                    ButtonFunction={handleYourKeys}\n                />\n            </div>\n            {metarootOverlayActive && <MetarootModal />}\n            {keyOverlayActive && <UserKeyModal />}\n        </div>\n    );\n};\n","import { Col, Row } from \"antd\";\n\nexport const UserCollection = () => {\n  const userData = [\n    {\n      Name: \"BORED APE #0\",\n      Image:\n        \"https://ipfs.io/ipfs/QmRRPWG96cmgTn2qSzjwr2qvfNEuhunv6FNeMFGa9bx6mQ\",\n    },\n    {\n      Name: \"BORED APE #1\",\n      Image:\n        \"https://ipfs.io/ipfs/QmcJYkCKK7QPmYWjp4FD2e3Lv5WCGFuHNUByvGKBaytif4\",\n    },\n    {\n      Name: \"BORED APE #2\",\n      Image:\n        \"https://ipfs.io/ipfs/QmSg9bPzW9anFYc3wWU5KnvymwkxQTpmqcRSfYj7UmiBa7\",\n    },\n    {\n      Name: \"BORED APE #3\",\n      Image:\n        \"https://ipfs.io/ipfs/QmWBgfBhyVmHNhBfEQ7p1P4Mpn7pm5b8KgSab2caELnTuV\",\n    },\n    {\n      Name: \"BORED APE #4\",\n      Image:\n        \"https://ipfs.io/ipfs/QmW1MBApm4XvwgoSKf45ZtsqJU5cDYdcsW2GBSEUqXWE3T\",\n    },\n    {\n      Name: \"BORED APE #5\",\n      Image:\n        \"https://ipfs.io/ipfs/QmeiZs7AWji15fpwTH6fqpZCBSpZpLg8Xn8UKrt4NVkB2y\",\n    },\n    {\n      Name: \"BORED APE #6\",\n      Image:\n        \"https://ipfs.io/ipfs/QmfNyXX3x7HYBpbJseB3pDFvV1W456tYjXxqdsba7WrEuU\",\n    },\n    {\n      Name: \"BORED APE #7\",\n      Image:\n        \"https://ipfs.io/ipfs/QmSdGMvowFxFFHJr3EajE8RNsPpPyKd5mh4yNaZZegPYqn\",\n    },\n    {\n      Name: \"BORED APE #8\",\n      Image:\n        \"https://ipfs.io/ipfs/QmadJMqL3WWr7SdtXzNUEvusy9o3uxedTbCuXNFHQxpsNZ\",\n    },\n  ];\n  return (\n    <Row justify=\"center\">\n      <Col xxl={22} xl={22} md={22} sm={24} xs={24}>\n        <Row gutter={20} className=\"user-collection\">\n          {userData.map((data) => {\n            return (\n              <Col xxl={4} xl={4} lg={4} md={4} sm={24} xs={24}>\n                <img\n                  className=\"user-collection-img\"\n                  src={data.Image}\n                  alt={data.Name}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Routes, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Home } from \"./views/Home\";\nimport { Explore } from \"./views/Explore\";\nimport { Creators } from \"./views/Creators\";\nimport { Community } from \"./views/Community\";\nimport { Dashboard } from \"./views/Dashboard\";\nimport { BlogEditor } from \"./views/BlogEditor\";\nimport { NotFound } from \"./views/NotFound\";\nimport { BlogView } from \"./views/BlogView\";\n\nimport { KeyModalProvider } from \"./context\";\nimport { useUserAuthContext, UserAuthProvider } from \"./context\";\nimport { AuthModalProvider } from \"./context\";\nimport { MetarootModalProvider } from \"./context\";\nimport { SessionKeyProvider } from \"./context\";\n\nimport { Navbar } from \"./components/layout/Navbar\";\nimport { Sidebar } from \"./components/layout/Sidebar\";\nimport { UserCollection } from \"./components/UserCollection\";\n\nimport \"./App.scss\";\nimport \"../node_modules/antd/dist/antd.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const App: FC = () => {\n  const { isUserAuthenticated } = useUserAuthContext();\n\n  // All routes should be '/' for custom domain\n  return (\n    <Router>\n      <SessionKeyProvider>\n        <UserAuthProvider>\n          <AuthModalProvider>\n            <KeyModalProvider>\n              <MetarootModalProvider>\n                <ToastContainer />\n                <Navbar />\n                <div className={isUserAuthenticated ? \"content-container\" : \"\"}>\n                  {isUserAuthenticated && (\n                    <div className=\"sidebar-div\">\n                      <Sidebar />\n                    </div>\n                  )}\n                  <div\n                    className={isUserAuthenticated ? \"main-content-div\" : \"\"}\n                  >\n                    <Routes>\n                      <Route path=\"*\" element={<NotFound />} />\n                      {!isUserAuthenticated && (\n                        <Route path=\"/second.exchange\" element={<Home />} />\n                      )}\n                      {isUserAuthenticated && (\n                        <Route\n                          path=\"/second.exchange\"\n                          element={<Dashboard />}\n                        />\n                      )}\n                      <Route\n                        path=\"/second.exchange/explore\"\n                        element={<Explore />}\n                      />\n                      <Route\n                        path=\"/second.exchange/creators\"\n                        element={<Creators />}\n                      />\n                      <Route\n                        path=\"/second.exchange/community\"\n                        element={<Community />}\n                      />\n                      {isUserAuthenticated && (\n                        <Route\n                          path=\"/second.exchange/write\"\n                          element={<BlogEditor />}\n                        />\n                      )}\n                      <Route\n                        path=\"/second.exchange/user-collection\"\n                        element={<UserCollection />}\n                      />\n                      <Route\n                        path=\"/second.exchange/read\"\n                        element={<BlogView />}\n                      />\n                    </Routes>\n                  </div>\n                </div>\n              </MetarootModalProvider>\n            </KeyModalProvider>\n          </AuthModalProvider>\n        </UserAuthProvider>\n      </SessionKeyProvider>\n    </Router>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(\n        <App />,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}